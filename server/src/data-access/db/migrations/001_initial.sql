BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "user" (
	"id"	TEXT NOT NULL UNIQUE,
	"email"	TEXT NOT NULL UNIQUE,
	"phone"	TEXT NOT NULL UNIQUE,
	"password"	TEXT NOT NULL,
	PRIMARY KEY("id")
);
CREATE TABLE IF NOT EXISTS "post" (
	"id"	TEXT NOT NULL UNIQUE,
	"authorId"	TEXT NOT NULL,
	"content"	TEXT NOT NULL,
	"status"	INTEGER NOT NULL,
	PRIMARY KEY("id"),
	FOREIGN KEY("authorId") REFERENCES "user"("id") ON DELETE RESTRICT
);
CREATE TABLE IF NOT EXISTS "comment" (
	"id"	TEXT NOT NULL UNIQUE,
	"authorId"	TEXT NOT NULL,
	"postId"	TEXT NOT NULL,
	"message"	TEXT NOT NULL,
	PRIMARY KEY("id"),
	FOREIGN KEY("authorId") REFERENCES "user"("id") ON DELETE RESTRICT,
	FOREIGN KEY("postId") REFERENCES "post"("id") ON DELETE RESTRICT
);
CREATE TABLE IF NOT EXISTS "role" (
	"id"	TEXT NOT NULL UNIQUE,
	"name"	TEXT NOT NULL,
	PRIMARY KEY("id")
);
CREATE TABLE IF NOT EXISTS "roleUser" (
	"userId"	TEXT NOT NULL,
	"roleId"	TEXT NOT NULL,
	PRIMARY KEY("userId","roleId")
);
CREATE TABLE IF NOT EXISTS "loginAttempt" (
	"id"	TEXT NOT NULL UNIQUE,
	"userId"	TEXT NOT NULL,
	"timestamp"	INTEGER NOT NULL,
	"successful"	INTEGER NOT NULL,
	PRIMARY KEY("id"),
	FOREIGN KEY("userId") REFERENCES "user"("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "smsToken" (
	"token"	TEXT NOT NULL UNIQUE,
	"userId"	TEXT NOT NULL,
	"iat"	INTEGER NOT NULL,
	PRIMARY KEY("token"),
	FOREIGN KEY("userId") REFERENCES "user"("id") ON DELETE CASCADE
);
COMMIT;
